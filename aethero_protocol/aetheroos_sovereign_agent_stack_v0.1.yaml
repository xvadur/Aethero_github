# AetheroOS Sovereign Agent Stack Configuration v0.1

agents:
  - agent_id: "planner_agent_001"
    description_asl:
      purpose: "strategic_planning"
      scope: "research_directive_deconstruction"
    core_functions_asl:
      - function: "decompose_task"
        input: "directive"
        output: "sub_tasks_plan"
      - function: "define_research_streams"
        input: "directive"
        output: "research_streams"
      - function: "assign_priorities"
        input: "research_streams"
        output: "prioritized_plan"
    llm_profile_preference:
      model: "claude_sonnet_4"
      requirements:
        complex_reasoning: true
        context_length: "high"
    aethero_mem_hooks_asl:
      - event: "plan_creation"
        data_schema: "research_plan_schema"
      - event: "task_decomposition"
        data_schema: "task_tree_schema"
    communication_protocol_asl:
      type: "artifact_exchange"
      format: "json_meta_accompanies_data"
      validation: "strict"

  - agent_id: "scout_agent_001"
    description_asl:
      purpose: "information_discovery"
      scope: "resource_identification"
    core_functions_asl:
      - function: "search_resources"
        input: "research_plan"
        output: "resource_catalog"
      - function: "evaluate_sources"
        input: "discovered_resources"
        output: "evaluated_resources"
    llm_profile_preference:
      model: "blackbox_base"
      requirements:
        real_time_web_access: true
        information_synthesis: true
    aethero_mem_hooks_asl:
      - event: "resource_discovery"
        data_schema: "resource_catalog_schema"
    communication_protocol_asl:
      type: "artifact_exchange"
      format: "json_meta_accompanies_data"
      validation: "standard"

  - agent_id: "analyst_agent_001"
    description_asl:
      purpose: "critical_analysis"
      scope: "resource_evaluation_synthesis"
    core_functions_asl:
      - function: "analyze_sources"
        input: "resource_catalog"
        output: "analysis_report"
      - function: "synthesize_findings"
        input: "analyzed_sources"
        output: "synthesis_report"
    llm_profile_preference:
      model: "claude_sonnet_4"
      requirements:
        critical_thinking: true
        pattern_recognition: true
    aethero_mem_hooks_asl:
      - event: "analysis_completion"
        data_schema: "analysis_report_schema"
    communication_protocol_asl:
      type: "artifact_exchange"
      format: "json_meta_accompanies_data"
      validation: "strict"

  - agent_id: "generator_agent_001"
    description_asl:
      purpose: "artifact_generation"
      scope: "code_documentation_creation"
    core_functions_asl:
      - function: "generate_code"
        input: "specifications"
        output: "code_artifacts"
      - function: "create_documentation"
        input: "code_artifacts"
        output: "documentation"
    llm_profile_preference:
      model: "deepseek_r1"
      requirements:
        code_generation: true
        technical_writing: true
    aethero_mem_hooks_asl:
      - event: "artifact_generation"
        data_schema: "artifact_schema"
    communication_protocol_asl:
      type: "artifact_exchange"
      format: "json_meta_accompanies_data"
      validation: "strict"

  - agent_id: "synthesis_agent_001"
    description_asl:
      purpose: "final_synthesis"
      scope: "comprehensive_reporting"
    core_functions_asl:
      - function: "consolidate_outputs"
        input: "all_agent_outputs"
        output: "consolidated_report"
      - function: "generate_recommendations"
        input: "consolidated_findings"
        output: "recommendations"
    llm_profile_preference:
      model: "claude_sonnet_4"
      requirements:
        synthesis_capability: true
        report_generation: true
    aethero_mem_hooks_asl:
      - event: "synthesis_completion"
        data_schema: "final_report_schema"
    communication_protocol_asl:
      type: "artifact_exchange"
      format: "json_meta_accompanies_data"
      validation: "strict"

  - agent_id: "governance_agent_aetherogpt_001"
    description_asl:
      purpose: "system_governance"
      scope: "pipeline_orchestration"
    core_functions_asl:
      - function: "orchestrate_pipeline"
        input: "research_directive"
        output: "orchestration_status"
      - function: "monitor_execution"
        input: "pipeline_state"
        output: "monitoring_report"
    llm_profile_preference:
      model: "aetherogpt_core"
      requirements:
        orchestration: true
        monitoring: true
    aethero_mem_hooks_asl:
      - event: "pipeline_execution"
        data_schema: "orchestration_schema"
    communication_protocol_asl:
      type: "direct_control"
      format: "asl_native"
      validation: "strict"

# Global Configuration
global_settings:
  version: "0.1"
  asl_version: "1.0"
  memory_system: "aethero_mem"
  logging_level: "detailed"
  validation_mode: "strict"
